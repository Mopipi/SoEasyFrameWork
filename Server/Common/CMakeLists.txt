cmake_minimum_required(VERSION 3.1.3)
PROJECT(Common)

AUX_SOURCE_DIRECTORY(./ SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonCore SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonTimer SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonDefine SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonManager SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonObject SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonModule SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonProtocol SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonGlobal SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonScript SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonCoroutine SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonOther SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonNetWork SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonThread SUPER_SRC)


AUX_SOURCE_DIRECTORY(./CommonScript/luaExtension SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonScript/LuaType SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonScript/Util SUPER_SRC)

AUX_SOURCE_DIRECTORY(./CommonUtil SUPER_SRC)
AUX_SOURCE_DIRECTORY(./CommonXCode SUPER_SRC)


INCLUDE_DIRECTORIES(./)

INCLUDE_DIRECTORIES(./CommonCore)
INCLUDE_DIRECTORIES(./CommonDefine)
INCLUDE_DIRECTORIES(./CommonTimer)
INCLUDE_DIRECTORIES(./CommonManager)
INCLUDE_DIRECTORIES(./CommonObject)
INCLUDE_DIRECTORIES(./CommonProtoc)
INCLUDE_DIRECTORIES(./CommonModule)
INCLUDE_DIRECTORIES(./CommonGlobal)
INCLUDE_DIRECTORIES(./CommonScript)
INCLUDE_DIRECTORIES(./CommonCoroutine)
INCLUDE_DIRECTORIES(./CommonOther)
INCLUDE_DIRECTORIES(./CommonNetWork)
INCLUDE_DIRECTORIES(./CommonThread)

INCLUDE_DIRECTORIES(./CommonScript/luaExtension)
INCLUDE_DIRECTORIES(./CommonScript/LuaType)
INCLUDE_DIRECTORIES(./CommonScript/Util)

INCLUDE_DIRECTORIES(./CommonUtil)
INCLUDE_DIRECTORIES(./CommonXCode)

INCLUDE_DIRECTORIES(../Libs/include/rapidjson)
INCLUDE_DIRECTORIES(../Libs/include/protobuf)
INCLUDE_DIRECTORIES(../Libs/include/asio)
INCLUDE_DIRECTORIES(../Libs/include/lua5.3)
INCLUDE_DIRECTORIES(../Libs/include/spdlog)

LINK_DIRECTORIES(.././Libs/lib)
SET(CMAKE_CXX_COMPILER "ccache")
SET(CMAKE_CXX_COMPILER_ARG1 "g++") 

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -std=gnu++11" )
SET(CMAKE_BUILD_TYPE Debug)
SET(LIBRARY_OUTPUT_PATH ../Libs/lib)
ADD_LIBRARY(Common STATIC ${SUPER_SRC})

#TARGET_LINK_LIBRARIES(Common protobuf ${MY_ADDLIB})
