// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerCommon.proto

#include "ServerCommon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ServerCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AssestCompareList_AssestCompareInfo_ServerCommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ServerCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LogicServerData_ServerCommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ServerCommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServiceData_ServerCommon_2eproto;
namespace PB {
class LogicServerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicServerData> _instance;
} _LogicServerData_default_instance_;
class LogicServerListDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicServerListData> _instance;
} _LogicServerListData_default_instance_;
class ServerRegisterBackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRegisterBack> _instance;
} _ServerRegisterBack_default_instance_;
class AssestCompareList_AssestCompareInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssestCompareList_AssestCompareInfo> _instance;
} _AssestCompareList_AssestCompareInfo_default_instance_;
class AssestCompareListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssestCompareList> _instance;
} _AssestCompareList_default_instance_;
class TransferAssestInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferAssestInfo> _instance;
} _TransferAssestInfo_default_instance_;
class ServerRunInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRunInfo> _instance;
} _ServerRunInfo_default_instance_;
class ServiceDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceData> _instance;
} _ServiceData_default_instance_;
class ServiceDataListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceDataList> _instance;
} _ServiceDataList_default_instance_;
class UserRegisterDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegisterData> _instance;
} _UserRegisterData_default_instance_;
class UserRegisterBackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegisterBack> _instance;
} _UserRegisterBack_default_instance_;
class UserAccountDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserAccountData> _instance;
} _UserAccountData_default_instance_;
}  // namespace PB
static void InitDefaultsLogicServerData_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_LogicServerData_default_instance_;
    new (ptr) ::PB::LogicServerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::LogicServerData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogicServerData_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogicServerData_ServerCommon_2eproto}, {}};

static void InitDefaultsLogicServerListData_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_LogicServerListData_default_instance_;
    new (ptr) ::PB::LogicServerListData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::LogicServerListData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LogicServerListData_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLogicServerListData_ServerCommon_2eproto}, {
      &scc_info_LogicServerData_ServerCommon_2eproto.base,}};

static void InitDefaultsServerRegisterBack_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_ServerRegisterBack_default_instance_;
    new (ptr) ::PB::ServerRegisterBack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::ServerRegisterBack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerRegisterBack_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerRegisterBack_ServerCommon_2eproto}, {
      &scc_info_LogicServerData_ServerCommon_2eproto.base,}};

static void InitDefaultsAssestCompareList_AssestCompareInfo_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_AssestCompareList_AssestCompareInfo_default_instance_;
    new (ptr) ::PB::AssestCompareList_AssestCompareInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::AssestCompareList_AssestCompareInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AssestCompareList_AssestCompareInfo_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAssestCompareList_AssestCompareInfo_ServerCommon_2eproto}, {}};

static void InitDefaultsAssestCompareList_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_AssestCompareList_default_instance_;
    new (ptr) ::PB::AssestCompareList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::AssestCompareList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AssestCompareList_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAssestCompareList_ServerCommon_2eproto}, {
      &scc_info_AssestCompareList_AssestCompareInfo_ServerCommon_2eproto.base,}};

static void InitDefaultsTransferAssestInfo_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_TransferAssestInfo_default_instance_;
    new (ptr) ::PB::TransferAssestInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::TransferAssestInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferAssestInfo_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferAssestInfo_ServerCommon_2eproto}, {}};

static void InitDefaultsServerRunInfo_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_ServerRunInfo_default_instance_;
    new (ptr) ::PB::ServerRunInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::ServerRunInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerRunInfo_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerRunInfo_ServerCommon_2eproto}, {}};

static void InitDefaultsServiceData_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_ServiceData_default_instance_;
    new (ptr) ::PB::ServiceData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::ServiceData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServiceData_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServiceData_ServerCommon_2eproto}, {}};

static void InitDefaultsServiceDataList_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_ServiceDataList_default_instance_;
    new (ptr) ::PB::ServiceDataList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::ServiceDataList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServiceDataList_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServiceDataList_ServerCommon_2eproto}, {
      &scc_info_ServiceData_ServerCommon_2eproto.base,}};

static void InitDefaultsUserRegisterData_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_UserRegisterData_default_instance_;
    new (ptr) ::PB::UserRegisterData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::UserRegisterData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserRegisterData_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserRegisterData_ServerCommon_2eproto}, {}};

static void InitDefaultsUserRegisterBack_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_UserRegisterBack_default_instance_;
    new (ptr) ::PB::UserRegisterBack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::UserRegisterBack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserRegisterBack_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserRegisterBack_ServerCommon_2eproto}, {}};

static void InitDefaultsUserAccountData_ServerCommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PB::_UserAccountData_default_instance_;
    new (ptr) ::PB::UserAccountData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB::UserAccountData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserAccountData_ServerCommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserAccountData_ServerCommon_2eproto}, {}};

void InitDefaults_ServerCommon_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LogicServerData_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogicServerListData_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerRegisterBack_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssestCompareList_AssestCompareInfo_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssestCompareList_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferAssestInfo_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerRunInfo_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceData_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceDataList_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRegisterData_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRegisterBack_ServerCommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserAccountData_ServerCommon_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ServerCommon_2eproto[12];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ServerCommon_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ServerCommon_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ServerCommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::LogicServerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::LogicServerData, area_id_),
  PROTOBUF_FIELD_OFFSET(::PB::LogicServerData, server_name_),
  PROTOBUF_FIELD_OFFSET(::PB::LogicServerData, server_ip_),
  PROTOBUF_FIELD_OFFSET(::PB::LogicServerData, server_port_),
  PROTOBUF_FIELD_OFFSET(::PB::LogicServerData, server_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::LogicServerListData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::LogicServerListData, server_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::ServerRegisterBack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::ServerRegisterBack, logic_srv_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::AssestCompareList_AssestCompareInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::AssestCompareList_AssestCompareInfo, file_name_),
  PROTOBUF_FIELD_OFFSET(::PB::AssestCompareList_AssestCompareInfo, file_md5_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::AssestCompareList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::AssestCompareList, assestlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::TransferAssestInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::TransferAssestInfo, file_name_),
  PROTOBUF_FIELD_OFFSET(::PB::TransferAssestInfo, file_content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::ServerRunInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::ServerRunInfo, server_name_),
  PROTOBUF_FIELD_OFFSET(::PB::ServerRunInfo, server_areaid_),
  PROTOBUF_FIELD_OFFSET(::PB::ServerRunInfo, server_run_time_),
  PROTOBUF_FIELD_OFFSET(::PB::ServerRunInfo, server_fps_),
  PROTOBUF_FIELD_OFFSET(::PB::ServerRunInfo, logic_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::ServiceData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::ServiceData, adreid_),
  PROTOBUF_FIELD_OFFSET(::PB::ServiceData, service_id_),
  PROTOBUF_FIELD_OFFSET(::PB::ServiceData, service_name_),
  PROTOBUF_FIELD_OFFSET(::PB::ServiceData, service_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::ServiceDataList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::ServiceDataList, services_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::UserRegisterData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::UserRegisterData, account_),
  PROTOBUF_FIELD_OFFSET(::PB::UserRegisterData, password_),
  PROTOBUF_FIELD_OFFSET(::PB::UserRegisterData, phonenum_),
  PROTOBUF_FIELD_OFFSET(::PB::UserRegisterData, platform_),
  PROTOBUF_FIELD_OFFSET(::PB::UserRegisterData, device_mac_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::UserRegisterBack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::UserRegisterBack, player_id_),
  PROTOBUF_FIELD_OFFSET(::PB::UserRegisterBack, register_time_),
  PROTOBUF_FIELD_OFFSET(::PB::UserRegisterBack, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB::UserAccountData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB::UserAccountData, user_id_),
  PROTOBUF_FIELD_OFFSET(::PB::UserAccountData, account_),
  PROTOBUF_FIELD_OFFSET(::PB::UserAccountData, passwd_),
  PROTOBUF_FIELD_OFFSET(::PB::UserAccountData, platform_),
  PROTOBUF_FIELD_OFFSET(::PB::UserAccountData, phonenum_),
  PROTOBUF_FIELD_OFFSET(::PB::UserAccountData, device_mac_),
  PROTOBUF_FIELD_OFFSET(::PB::UserAccountData, register_time_),
  PROTOBUF_FIELD_OFFSET(::PB::UserAccountData, last_logintime_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PB::LogicServerData)},
  { 10, -1, sizeof(::PB::LogicServerListData)},
  { 16, -1, sizeof(::PB::ServerRegisterBack)},
  { 22, -1, sizeof(::PB::AssestCompareList_AssestCompareInfo)},
  { 29, -1, sizeof(::PB::AssestCompareList)},
  { 35, -1, sizeof(::PB::TransferAssestInfo)},
  { 42, -1, sizeof(::PB::ServerRunInfo)},
  { 52, -1, sizeof(::PB::ServiceData)},
  { 61, -1, sizeof(::PB::ServiceDataList)},
  { 67, -1, sizeof(::PB::UserRegisterData)},
  { 77, -1, sizeof(::PB::UserRegisterBack)},
  { 85, -1, sizeof(::PB::UserAccountData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_LogicServerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_LogicServerListData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_ServerRegisterBack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_AssestCompareList_AssestCompareInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_AssestCompareList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_TransferAssestInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_ServerRunInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_ServiceData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_ServiceDataList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_UserRegisterData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_UserRegisterBack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PB::_UserAccountData_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ServerCommon_2eproto = {
  {}, AddDescriptors_ServerCommon_2eproto, "ServerCommon.proto", schemas,
  file_default_instances, TableStruct_ServerCommon_2eproto::offsets,
  file_level_metadata_ServerCommon_2eproto, 12, file_level_enum_descriptors_ServerCommon_2eproto, file_level_service_descriptors_ServerCommon_2eproto,
};

const char descriptor_table_protodef_ServerCommon_2eproto[] =
  "\n\022ServerCommon.proto\022\002PB\"u\n\017LogicServerD"
  "ata\022\017\n\007area_id\030\001 \001(\005\022\023\n\013server_name\030\002 \001("
  "\t\022\021\n\tserver_ip\030\003 \001(\t\022\023\n\013server_port\030\004 \001("
  "\005\022\024\n\014server_token\030\005 \001(\t\"\?\n\023LogicServerLi"
  "stData\022(\n\013server_data\030\001 \001(\0132\023.PB.LogicSe"
  "rverData\"A\n\022ServerRegisterBack\022+\n\016logic_"
  "srv_list\030\001 \003(\0132\023.PB.LogicServerData\"\212\001\n\021"
  "AssestCompareList\022;\n\nassestList\030\001 \003(\0132\'."
  "PB.AssestCompareList.AssestCompareInfo\0328"
  "\n\021AssestCompareInfo\022\021\n\tfile_name\030\001 \001(\t\022\020"
  "\n\010file_md5\030\002 \001(\t\"=\n\022TransferAssestInfo\022\021"
  "\n\tfile_name\030\001 \001(\t\022\024\n\014file_content\030\002 \001(\014\""
  "|\n\rServerRunInfo\022\023\n\013server_name\030\001 \001(\t\022\025\n"
  "\rserver_areaId\030\002 \001(\005\022\027\n\017server_run_time\030"
  "\003 \001(\003\022\022\n\nserver_fps\030\004 \001(\002\022\022\n\nlogic_time\030"
  "\005 \001(\002\"`\n\013ServiceData\022\016\n\006adreId\030\001 \001(\005\022\022\n\n"
  "service_id\030\002 \001(\005\022\024\n\014service_name\030\003 \001(\t\022\027"
  "\n\017service_address\030\004 \001(\t\"4\n\017ServiceDataLi"
  "st\022!\n\010services\030\001 \003(\0132\017.PB.ServiceData\"m\n"
  "\020UserRegisterData\022\017\n\007account\030\001 \001(\t\022\020\n\010pa"
  "ssword\030\002 \001(\t\022\020\n\010phonenum\030\003 \001(\003\022\020\n\010platfo"
  "rm\030\004 \001(\t\022\022\n\ndevice_mac\030\005 \001(\t\"K\n\020UserRegi"
  "sterBack\022\021\n\tplayer_id\030\001 \001(\003\022\025\n\rregister_"
  "time\030\002 \001(\003\022\r\n\005token\030\003 \001(\t\"\252\001\n\017UserAccoun"
  "tData\022\017\n\007user_id\030\001 \001(\003\022\017\n\007account\030\002 \001(\t\022"
  "\016\n\006passwd\030\003 \001(\t\022\020\n\010platform\030\004 \001(\t\022\020\n\010pho"
  "nenum\030\005 \001(\003\022\022\n\ndevice_mac\030\006 \001(\t\022\025\n\rregis"
  "ter_time\030\007 \001(\003\022\026\n\016last_logintime\030\010 \001(\003b\006"
  "proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ServerCommon_2eproto = {
  false, InitDefaults_ServerCommon_2eproto, 
  descriptor_table_protodef_ServerCommon_2eproto,
  "ServerCommon.proto", &assign_descriptors_table_ServerCommon_2eproto, 1126,
};

void AddDescriptors_ServerCommon_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ServerCommon_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ServerCommon_2eproto = []() { AddDescriptors_ServerCommon_2eproto(); return true; }();
namespace PB {

// ===================================================================

void LogicServerData::InitAsDefaultInstance() {
}
class LogicServerData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicServerData::kAreaIdFieldNumber;
const int LogicServerData::kServerNameFieldNumber;
const int LogicServerData::kServerIpFieldNumber;
const int LogicServerData::kServerPortFieldNumber;
const int LogicServerData::kServerTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicServerData::LogicServerData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.LogicServerData)
}
LogicServerData::LogicServerData(const LogicServerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  server_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_ip().size() > 0) {
    server_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ip_);
  }
  server_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_token().size() > 0) {
    server_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_token_);
  }
  ::memcpy(&area_id_, &from.area_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_port_) -
    reinterpret_cast<char*>(&area_id_)) + sizeof(server_port_));
  // @@protoc_insertion_point(copy_constructor:PB.LogicServerData)
}

void LogicServerData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogicServerData_ServerCommon_2eproto.base);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_port_) -
      reinterpret_cast<char*>(&area_id_)) + sizeof(server_port_));
}

LogicServerData::~LogicServerData() {
  // @@protoc_insertion_point(destructor:PB.LogicServerData)
  SharedDtor();
}

void LogicServerData::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogicServerData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogicServerData& LogicServerData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogicServerData_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void LogicServerData::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.LogicServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_port_) -
      reinterpret_cast<char*>(&area_id_)) + sizeof(server_port_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogicServerData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogicServerData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 area_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_area_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string server_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.LogicServerData.server_name");
        object = msg->mutable_server_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string server_ip = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.LogicServerData.server_ip");
        object = msg->mutable_server_ip();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 server_port = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_server_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string server_token = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.LogicServerData.server_token");
        object = msg->mutable_server_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogicServerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.LogicServerData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.LogicServerData.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_ip().data(), static_cast<int>(this->server_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.LogicServerData.server_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 server_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_token().data(), static_cast<int>(this->server_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.LogicServerData.server_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.LogicServerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.LogicServerData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogicServerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.LogicServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 area_id = 1;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->area_id(), output);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.LogicServerData.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_name(), output);
  }

  // string server_ip = 3;
  if (this->server_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_ip().data(), static_cast<int>(this->server_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.LogicServerData.server_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->server_ip(), output);
  }

  // int32 server_port = 4;
  if (this->server_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->server_port(), output);
  }

  // string server_token = 5;
  if (this->server_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_token().data(), static_cast<int>(this->server_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.LogicServerData.server_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->server_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.LogicServerData)
}

::google::protobuf::uint8* LogicServerData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.LogicServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 area_id = 1;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->area_id(), target);
  }

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.LogicServerData.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_name(), target);
  }

  // string server_ip = 3;
  if (this->server_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_ip().data(), static_cast<int>(this->server_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.LogicServerData.server_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server_ip(), target);
  }

  // int32 server_port = 4;
  if (this->server_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->server_port(), target);
  }

  // string server_token = 5;
  if (this->server_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_token().data(), static_cast<int>(this->server_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.LogicServerData.server_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->server_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.LogicServerData)
  return target;
}

size_t LogicServerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.LogicServerData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server_name = 2;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // string server_ip = 3;
  if (this->server_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_ip());
  }

  // string server_token = 5;
  if (this->server_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_token());
  }

  // int32 area_id = 1;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->area_id());
  }

  // int32 server_port = 4;
  if (this->server_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogicServerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.LogicServerData)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicServerData* source =
      ::google::protobuf::DynamicCastToGenerated<LogicServerData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.LogicServerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.LogicServerData)
    MergeFrom(*source);
  }
}

void LogicServerData::MergeFrom(const LogicServerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.LogicServerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_ip().size() > 0) {

    server_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ip_);
  }
  if (from.server_token().size() > 0) {

    server_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_token_);
  }
  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
  if (from.server_port() != 0) {
    set_server_port(from.server_port());
  }
}

void LogicServerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.LogicServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicServerData::CopyFrom(const LogicServerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.LogicServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicServerData::IsInitialized() const {
  return true;
}

void LogicServerData::Swap(LogicServerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicServerData::InternalSwap(LogicServerData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_ip_.Swap(&other->server_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_token_.Swap(&other->server_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(area_id_, other->area_id_);
  swap(server_port_, other->server_port_);
}

::google::protobuf::Metadata LogicServerData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogicServerListData::InitAsDefaultInstance() {
  ::PB::_LogicServerListData_default_instance_._instance.get_mutable()->server_data_ = const_cast< ::PB::LogicServerData*>(
      ::PB::LogicServerData::internal_default_instance());
}
class LogicServerListData::HasBitSetters {
 public:
  static const ::PB::LogicServerData& server_data(const LogicServerListData* msg);
};

const ::PB::LogicServerData&
LogicServerListData::HasBitSetters::server_data(const LogicServerListData* msg) {
  return *msg->server_data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicServerListData::kServerDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicServerListData::LogicServerListData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.LogicServerListData)
}
LogicServerListData::LogicServerListData(const LogicServerListData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server_data()) {
    server_data_ = new ::PB::LogicServerData(*from.server_data_);
  } else {
    server_data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PB.LogicServerListData)
}

void LogicServerListData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogicServerListData_ServerCommon_2eproto.base);
  server_data_ = nullptr;
}

LogicServerListData::~LogicServerListData() {
  // @@protoc_insertion_point(destructor:PB.LogicServerListData)
  SharedDtor();
}

void LogicServerListData::SharedDtor() {
  if (this != internal_default_instance()) delete server_data_;
}

void LogicServerListData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogicServerListData& LogicServerListData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogicServerListData_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void LogicServerListData::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.LogicServerListData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && server_data_ != nullptr) {
    delete server_data_;
  }
  server_data_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogicServerListData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogicServerListData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .PB.LogicServerData server_data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::PB::LogicServerData::_InternalParse;
        object = msg->mutable_server_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogicServerListData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.LogicServerListData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PB.LogicServerData server_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.LogicServerListData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.LogicServerListData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogicServerListData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.LogicServerListData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PB.LogicServerData server_data = 1;
  if (this->has_server_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::server_data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.LogicServerListData)
}

::google::protobuf::uint8* LogicServerListData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.LogicServerListData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PB.LogicServerData server_data = 1;
  if (this->has_server_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::server_data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.LogicServerListData)
  return target;
}

size_t LogicServerListData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.LogicServerListData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PB.LogicServerData server_data = 1;
  if (this->has_server_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogicServerListData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.LogicServerListData)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicServerListData* source =
      ::google::protobuf::DynamicCastToGenerated<LogicServerListData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.LogicServerListData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.LogicServerListData)
    MergeFrom(*source);
  }
}

void LogicServerListData::MergeFrom(const LogicServerListData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.LogicServerListData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server_data()) {
    mutable_server_data()->::PB::LogicServerData::MergeFrom(from.server_data());
  }
}

void LogicServerListData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.LogicServerListData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicServerListData::CopyFrom(const LogicServerListData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.LogicServerListData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicServerListData::IsInitialized() const {
  return true;
}

void LogicServerListData::Swap(LogicServerListData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicServerListData::InternalSwap(LogicServerListData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(server_data_, other->server_data_);
}

::google::protobuf::Metadata LogicServerListData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServerRegisterBack::InitAsDefaultInstance() {
}
class ServerRegisterBack::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRegisterBack::kLogicSrvListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRegisterBack::ServerRegisterBack()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.ServerRegisterBack)
}
ServerRegisterBack::ServerRegisterBack(const ServerRegisterBack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      logic_srv_list_(from.logic_srv_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PB.ServerRegisterBack)
}

void ServerRegisterBack::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServerRegisterBack_ServerCommon_2eproto.base);
}

ServerRegisterBack::~ServerRegisterBack() {
  // @@protoc_insertion_point(destructor:PB.ServerRegisterBack)
  SharedDtor();
}

void ServerRegisterBack::SharedDtor() {
}

void ServerRegisterBack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerRegisterBack& ServerRegisterBack::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServerRegisterBack_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void ServerRegisterBack::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.ServerRegisterBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logic_srv_list_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServerRegisterBack::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServerRegisterBack*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .PB.LogicServerData logic_srv_list = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::PB::LogicServerData::_InternalParse;
          object = msg->add_logic_srv_list();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServerRegisterBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.ServerRegisterBack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB.LogicServerData logic_srv_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_logic_srv_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.ServerRegisterBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.ServerRegisterBack)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServerRegisterBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.ServerRegisterBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PB.LogicServerData logic_srv_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logic_srv_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->logic_srv_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.ServerRegisterBack)
}

::google::protobuf::uint8* ServerRegisterBack::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.ServerRegisterBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PB.LogicServerData logic_srv_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logic_srv_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->logic_srv_list(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.ServerRegisterBack)
  return target;
}

size_t ServerRegisterBack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.ServerRegisterBack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PB.LogicServerData logic_srv_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->logic_srv_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->logic_srv_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerRegisterBack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.ServerRegisterBack)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRegisterBack* source =
      ::google::protobuf::DynamicCastToGenerated<ServerRegisterBack>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.ServerRegisterBack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.ServerRegisterBack)
    MergeFrom(*source);
  }
}

void ServerRegisterBack::MergeFrom(const ServerRegisterBack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.ServerRegisterBack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  logic_srv_list_.MergeFrom(from.logic_srv_list_);
}

void ServerRegisterBack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.ServerRegisterBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegisterBack::CopyFrom(const ServerRegisterBack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.ServerRegisterBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegisterBack::IsInitialized() const {
  return true;
}

void ServerRegisterBack::Swap(ServerRegisterBack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRegisterBack::InternalSwap(ServerRegisterBack* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&logic_srv_list_)->InternalSwap(CastToBase(&other->logic_srv_list_));
}

::google::protobuf::Metadata ServerRegisterBack::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AssestCompareList_AssestCompareInfo::InitAsDefaultInstance() {
}
class AssestCompareList_AssestCompareInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssestCompareList_AssestCompareInfo::kFileNameFieldNumber;
const int AssestCompareList_AssestCompareInfo::kFileMd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssestCompareList_AssestCompareInfo::AssestCompareList_AssestCompareInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.AssestCompareList.AssestCompareInfo)
}
AssestCompareList_AssestCompareInfo::AssestCompareList_AssestCompareInfo(const AssestCompareList_AssestCompareInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  file_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_md5().size() > 0) {
    file_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_md5_);
  }
  // @@protoc_insertion_point(copy_constructor:PB.AssestCompareList.AssestCompareInfo)
}

void AssestCompareList_AssestCompareInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AssestCompareList_AssestCompareInfo_ServerCommon_2eproto.base);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AssestCompareList_AssestCompareInfo::~AssestCompareList_AssestCompareInfo() {
  // @@protoc_insertion_point(destructor:PB.AssestCompareList.AssestCompareInfo)
  SharedDtor();
}

void AssestCompareList_AssestCompareInfo::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AssestCompareList_AssestCompareInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssestCompareList_AssestCompareInfo& AssestCompareList_AssestCompareInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AssestCompareList_AssestCompareInfo_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void AssestCompareList_AssestCompareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.AssestCompareList.AssestCompareInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AssestCompareList_AssestCompareInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AssestCompareList_AssestCompareInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string file_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.AssestCompareList.AssestCompareInfo.file_name");
        object = msg->mutable_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string file_md5 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.AssestCompareList.AssestCompareInfo.file_md5");
        object = msg->mutable_file_md5();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AssestCompareList_AssestCompareInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.AssestCompareList.AssestCompareInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.AssestCompareList.AssestCompareInfo.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_md5 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_md5().data(), static_cast<int>(this->file_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.AssestCompareList.AssestCompareInfo.file_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.AssestCompareList.AssestCompareInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.AssestCompareList.AssestCompareInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AssestCompareList_AssestCompareInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.AssestCompareList.AssestCompareInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.AssestCompareList.AssestCompareInfo.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // string file_md5 = 2;
  if (this->file_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_md5().data(), static_cast<int>(this->file_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.AssestCompareList.AssestCompareInfo.file_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_md5(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.AssestCompareList.AssestCompareInfo)
}

::google::protobuf::uint8* AssestCompareList_AssestCompareInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.AssestCompareList.AssestCompareInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.AssestCompareList.AssestCompareInfo.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // string file_md5 = 2;
  if (this->file_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_md5().data(), static_cast<int>(this->file_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.AssestCompareList.AssestCompareInfo.file_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_md5(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.AssestCompareList.AssestCompareInfo)
  return target;
}

size_t AssestCompareList_AssestCompareInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.AssestCompareList.AssestCompareInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string file_md5 = 2;
  if (this->file_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_md5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssestCompareList_AssestCompareInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.AssestCompareList.AssestCompareInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AssestCompareList_AssestCompareInfo* source =
      ::google::protobuf::DynamicCastToGenerated<AssestCompareList_AssestCompareInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.AssestCompareList.AssestCompareInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.AssestCompareList.AssestCompareInfo)
    MergeFrom(*source);
  }
}

void AssestCompareList_AssestCompareInfo::MergeFrom(const AssestCompareList_AssestCompareInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.AssestCompareList.AssestCompareInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.file_md5().size() > 0) {

    file_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_md5_);
  }
}

void AssestCompareList_AssestCompareInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.AssestCompareList.AssestCompareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssestCompareList_AssestCompareInfo::CopyFrom(const AssestCompareList_AssestCompareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.AssestCompareList.AssestCompareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssestCompareList_AssestCompareInfo::IsInitialized() const {
  return true;
}

void AssestCompareList_AssestCompareInfo::Swap(AssestCompareList_AssestCompareInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssestCompareList_AssestCompareInfo::InternalSwap(AssestCompareList_AssestCompareInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_md5_.Swap(&other->file_md5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AssestCompareList_AssestCompareInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AssestCompareList::InitAsDefaultInstance() {
}
class AssestCompareList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssestCompareList::kAssestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssestCompareList::AssestCompareList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.AssestCompareList)
}
AssestCompareList::AssestCompareList(const AssestCompareList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      assestlist_(from.assestlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PB.AssestCompareList)
}

void AssestCompareList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AssestCompareList_ServerCommon_2eproto.base);
}

AssestCompareList::~AssestCompareList() {
  // @@protoc_insertion_point(destructor:PB.AssestCompareList)
  SharedDtor();
}

void AssestCompareList::SharedDtor() {
}

void AssestCompareList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssestCompareList& AssestCompareList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AssestCompareList_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void AssestCompareList::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.AssestCompareList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assestlist_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AssestCompareList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AssestCompareList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .PB.AssestCompareList.AssestCompareInfo assestList = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::PB::AssestCompareList_AssestCompareInfo::_InternalParse;
          object = msg->add_assestlist();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AssestCompareList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.AssestCompareList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB.AssestCompareList.AssestCompareInfo assestList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_assestlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.AssestCompareList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.AssestCompareList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AssestCompareList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.AssestCompareList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PB.AssestCompareList.AssestCompareInfo assestList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assestlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->assestlist(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.AssestCompareList)
}

::google::protobuf::uint8* AssestCompareList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.AssestCompareList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PB.AssestCompareList.AssestCompareInfo assestList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assestlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->assestlist(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.AssestCompareList)
  return target;
}

size_t AssestCompareList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.AssestCompareList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PB.AssestCompareList.AssestCompareInfo assestList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->assestlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->assestlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssestCompareList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.AssestCompareList)
  GOOGLE_DCHECK_NE(&from, this);
  const AssestCompareList* source =
      ::google::protobuf::DynamicCastToGenerated<AssestCompareList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.AssestCompareList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.AssestCompareList)
    MergeFrom(*source);
  }
}

void AssestCompareList::MergeFrom(const AssestCompareList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.AssestCompareList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  assestlist_.MergeFrom(from.assestlist_);
}

void AssestCompareList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.AssestCompareList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssestCompareList::CopyFrom(const AssestCompareList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.AssestCompareList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssestCompareList::IsInitialized() const {
  return true;
}

void AssestCompareList::Swap(AssestCompareList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssestCompareList::InternalSwap(AssestCompareList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&assestlist_)->InternalSwap(CastToBase(&other->assestlist_));
}

::google::protobuf::Metadata AssestCompareList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TransferAssestInfo::InitAsDefaultInstance() {
}
class TransferAssestInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferAssestInfo::kFileNameFieldNumber;
const int TransferAssestInfo::kFileContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferAssestInfo::TransferAssestInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.TransferAssestInfo)
}
TransferAssestInfo::TransferAssestInfo(const TransferAssestInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  file_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_content().size() > 0) {
    file_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_content_);
  }
  // @@protoc_insertion_point(copy_constructor:PB.TransferAssestInfo)
}

void TransferAssestInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TransferAssestInfo_ServerCommon_2eproto.base);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TransferAssestInfo::~TransferAssestInfo() {
  // @@protoc_insertion_point(destructor:PB.TransferAssestInfo)
  SharedDtor();
}

void TransferAssestInfo::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferAssestInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransferAssestInfo& TransferAssestInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TransferAssestInfo_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void TransferAssestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.TransferAssestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransferAssestInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TransferAssestInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string file_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.TransferAssestInfo.file_name");
        object = msg->mutable_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes file_content = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_file_content();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransferAssestInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.TransferAssestInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.TransferAssestInfo.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes file_content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_file_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.TransferAssestInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.TransferAssestInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransferAssestInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.TransferAssestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.TransferAssestInfo.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // bytes file_content = 2;
  if (this->file_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->file_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.TransferAssestInfo)
}

::google::protobuf::uint8* TransferAssestInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.TransferAssestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.TransferAssestInfo.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // bytes file_content = 2;
  if (this->file_content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->file_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.TransferAssestInfo)
  return target;
}

size_t TransferAssestInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.TransferAssestInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // bytes file_content = 2;
  if (this->file_content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->file_content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferAssestInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.TransferAssestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferAssestInfo* source =
      ::google::protobuf::DynamicCastToGenerated<TransferAssestInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.TransferAssestInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.TransferAssestInfo)
    MergeFrom(*source);
  }
}

void TransferAssestInfo::MergeFrom(const TransferAssestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.TransferAssestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.file_content().size() > 0) {

    file_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_content_);
  }
}

void TransferAssestInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.TransferAssestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferAssestInfo::CopyFrom(const TransferAssestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.TransferAssestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferAssestInfo::IsInitialized() const {
  return true;
}

void TransferAssestInfo::Swap(TransferAssestInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferAssestInfo::InternalSwap(TransferAssestInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_content_.Swap(&other->file_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TransferAssestInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServerRunInfo::InitAsDefaultInstance() {
}
class ServerRunInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRunInfo::kServerNameFieldNumber;
const int ServerRunInfo::kServerAreaIdFieldNumber;
const int ServerRunInfo::kServerRunTimeFieldNumber;
const int ServerRunInfo::kServerFpsFieldNumber;
const int ServerRunInfo::kLogicTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRunInfo::ServerRunInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.ServerRunInfo)
}
ServerRunInfo::ServerRunInfo(const ServerRunInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  ::memcpy(&server_run_time_, &from.server_run_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&logic_time_) -
    reinterpret_cast<char*>(&server_run_time_)) + sizeof(logic_time_));
  // @@protoc_insertion_point(copy_constructor:PB.ServerRunInfo)
}

void ServerRunInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServerRunInfo_ServerCommon_2eproto.base);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_run_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logic_time_) -
      reinterpret_cast<char*>(&server_run_time_)) + sizeof(logic_time_));
}

ServerRunInfo::~ServerRunInfo() {
  // @@protoc_insertion_point(destructor:PB.ServerRunInfo)
  SharedDtor();
}

void ServerRunInfo::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerRunInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerRunInfo& ServerRunInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServerRunInfo_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void ServerRunInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.ServerRunInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_run_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logic_time_) -
      reinterpret_cast<char*>(&server_run_time_)) + sizeof(logic_time_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServerRunInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServerRunInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string server_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.ServerRunInfo.server_name");
        object = msg->mutable_server_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 server_areaId = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_server_areaid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 server_run_time = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_server_run_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float server_fps = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_server_fps(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float logic_time = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_logic_time(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServerRunInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.ServerRunInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_name().data(), static_cast<int>(this->server_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.ServerRunInfo.server_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 server_areaId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_areaid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 server_run_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &server_run_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float server_fps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &server_fps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float logic_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &logic_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.ServerRunInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.ServerRunInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServerRunInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.ServerRunInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.ServerRunInfo.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_name(), output);
  }

  // int32 server_areaId = 2;
  if (this->server_areaid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->server_areaid(), output);
  }

  // int64 server_run_time = 3;
  if (this->server_run_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->server_run_time(), output);
  }

  // float server_fps = 4;
  if (this->server_fps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->server_fps(), output);
  }

  // float logic_time = 5;
  if (this->logic_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->logic_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.ServerRunInfo)
}

::google::protobuf::uint8* ServerRunInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.ServerRunInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_name().data(), static_cast<int>(this->server_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.ServerRunInfo.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_name(), target);
  }

  // int32 server_areaId = 2;
  if (this->server_areaid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->server_areaid(), target);
  }

  // int64 server_run_time = 3;
  if (this->server_run_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->server_run_time(), target);
  }

  // float server_fps = 4;
  if (this->server_fps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->server_fps(), target);
  }

  // float logic_time = 5;
  if (this->logic_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->logic_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.ServerRunInfo)
  return target;
}

size_t ServerRunInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.ServerRunInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server_name = 1;
  if (this->server_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_name());
  }

  // int64 server_run_time = 3;
  if (this->server_run_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->server_run_time());
  }

  // int32 server_areaId = 2;
  if (this->server_areaid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_areaid());
  }

  // float server_fps = 4;
  if (this->server_fps() != 0) {
    total_size += 1 + 4;
  }

  // float logic_time = 5;
  if (this->logic_time() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerRunInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.ServerRunInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRunInfo* source =
      ::google::protobuf::DynamicCastToGenerated<ServerRunInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.ServerRunInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.ServerRunInfo)
    MergeFrom(*source);
  }
}

void ServerRunInfo::MergeFrom(const ServerRunInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.ServerRunInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_name().size() > 0) {

    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  if (from.server_run_time() != 0) {
    set_server_run_time(from.server_run_time());
  }
  if (from.server_areaid() != 0) {
    set_server_areaid(from.server_areaid());
  }
  if (from.server_fps() != 0) {
    set_server_fps(from.server_fps());
  }
  if (from.logic_time() != 0) {
    set_logic_time(from.logic_time());
  }
}

void ServerRunInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.ServerRunInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRunInfo::CopyFrom(const ServerRunInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.ServerRunInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRunInfo::IsInitialized() const {
  return true;
}

void ServerRunInfo::Swap(ServerRunInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRunInfo::InternalSwap(ServerRunInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  server_name_.Swap(&other->server_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(server_run_time_, other->server_run_time_);
  swap(server_areaid_, other->server_areaid_);
  swap(server_fps_, other->server_fps_);
  swap(logic_time_, other->logic_time_);
}

::google::protobuf::Metadata ServerRunInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServiceData::InitAsDefaultInstance() {
}
class ServiceData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceData::kAdreIdFieldNumber;
const int ServiceData::kServiceIdFieldNumber;
const int ServiceData::kServiceNameFieldNumber;
const int ServiceData::kServiceAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceData::ServiceData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.ServiceData)
}
ServiceData::ServiceData(const ServiceData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  service_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_address().size() > 0) {
    service_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_address_);
  }
  ::memcpy(&adreid_, &from.adreid_,
    static_cast<size_t>(reinterpret_cast<char*>(&service_id_) -
    reinterpret_cast<char*>(&adreid_)) + sizeof(service_id_));
  // @@protoc_insertion_point(copy_constructor:PB.ServiceData)
}

void ServiceData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServiceData_ServerCommon_2eproto.base);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&adreid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&service_id_) -
      reinterpret_cast<char*>(&adreid_)) + sizeof(service_id_));
}

ServiceData::~ServiceData() {
  // @@protoc_insertion_point(destructor:PB.ServiceData)
  SharedDtor();
}

void ServiceData::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServiceData& ServiceData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServiceData_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void ServiceData::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.ServiceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&adreid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&service_id_) -
      reinterpret_cast<char*>(&adreid_)) + sizeof(service_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServiceData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServiceData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 adreId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_adreid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 service_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_service_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string service_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.ServiceData.service_name");
        object = msg->mutable_service_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string service_address = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.ServiceData.service_address");
        object = msg->mutable_service_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServiceData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.ServiceData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 adreId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adreid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 service_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &service_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.ServiceData.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_address().data(), static_cast<int>(this->service_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.ServiceData.service_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.ServiceData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.ServiceData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServiceData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.ServiceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 adreId = 1;
  if (this->adreid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->adreid(), output);
  }

  // int32 service_id = 2;
  if (this->service_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->service_id(), output);
  }

  // string service_name = 3;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.ServiceData.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service_name(), output);
  }

  // string service_address = 4;
  if (this->service_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_address().data(), static_cast<int>(this->service_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.ServiceData.service_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->service_address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.ServiceData)
}

::google::protobuf::uint8* ServiceData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.ServiceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 adreId = 1;
  if (this->adreid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->adreid(), target);
  }

  // int32 service_id = 2;
  if (this->service_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->service_id(), target);
  }

  // string service_name = 3;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.ServiceData.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service_name(), target);
  }

  // string service_address = 4;
  if (this->service_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_address().data(), static_cast<int>(this->service_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.ServiceData.service_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->service_address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.ServiceData)
  return target;
}

size_t ServiceData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.ServiceData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 3;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string service_address = 4;
  if (this->service_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_address());
  }

  // int32 adreId = 1;
  if (this->adreid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adreid());
  }

  // int32 service_id = 2;
  if (this->service_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->service_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.ServiceData)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceData* source =
      ::google::protobuf::DynamicCastToGenerated<ServiceData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.ServiceData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.ServiceData)
    MergeFrom(*source);
  }
}

void ServiceData::MergeFrom(const ServiceData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.ServiceData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.service_address().size() > 0) {

    service_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_address_);
  }
  if (from.adreid() != 0) {
    set_adreid(from.adreid());
  }
  if (from.service_id() != 0) {
    set_service_id(from.service_id());
  }
}

void ServiceData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.ServiceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceData::CopyFrom(const ServiceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.ServiceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceData::IsInitialized() const {
  return true;
}

void ServiceData::Swap(ServiceData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceData::InternalSwap(ServiceData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_address_.Swap(&other->service_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(adreid_, other->adreid_);
  swap(service_id_, other->service_id_);
}

::google::protobuf::Metadata ServiceData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServiceDataList::InitAsDefaultInstance() {
}
class ServiceDataList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceDataList::kServicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceDataList::ServiceDataList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.ServiceDataList)
}
ServiceDataList::ServiceDataList(const ServiceDataList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      services_(from.services_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PB.ServiceDataList)
}

void ServiceDataList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServiceDataList_ServerCommon_2eproto.base);
}

ServiceDataList::~ServiceDataList() {
  // @@protoc_insertion_point(destructor:PB.ServiceDataList)
  SharedDtor();
}

void ServiceDataList::SharedDtor() {
}

void ServiceDataList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServiceDataList& ServiceDataList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServiceDataList_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void ServiceDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.ServiceDataList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  services_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServiceDataList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServiceDataList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .PB.ServiceData services = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::PB::ServiceData::_InternalParse;
          object = msg->add_services();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServiceDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.ServiceDataList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB.ServiceData services = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.ServiceDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.ServiceDataList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServiceDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.ServiceDataList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PB.ServiceData services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->services(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.ServiceDataList)
}

::google::protobuf::uint8* ServiceDataList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.ServiceDataList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PB.ServiceData services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->services(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.ServiceDataList)
  return target;
}

size_t ServiceDataList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.ServiceDataList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PB.ServiceData services = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->services(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.ServiceDataList)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceDataList* source =
      ::google::protobuf::DynamicCastToGenerated<ServiceDataList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.ServiceDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.ServiceDataList)
    MergeFrom(*source);
  }
}

void ServiceDataList::MergeFrom(const ServiceDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.ServiceDataList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  services_.MergeFrom(from.services_);
}

void ServiceDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.ServiceDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceDataList::CopyFrom(const ServiceDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.ServiceDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceDataList::IsInitialized() const {
  return true;
}

void ServiceDataList::Swap(ServiceDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceDataList::InternalSwap(ServiceDataList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&services_)->InternalSwap(CastToBase(&other->services_));
}

::google::protobuf::Metadata ServiceDataList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserRegisterData::InitAsDefaultInstance() {
}
class UserRegisterData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegisterData::kAccountFieldNumber;
const int UserRegisterData::kPasswordFieldNumber;
const int UserRegisterData::kPhonenumFieldNumber;
const int UserRegisterData::kPlatformFieldNumber;
const int UserRegisterData::kDeviceMacFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegisterData::UserRegisterData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.UserRegisterData)
}
UserRegisterData::UserRegisterData(const UserRegisterData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform().size() > 0) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  device_mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_mac().size() > 0) {
    device_mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_mac_);
  }
  phonenum_ = from.phonenum_;
  // @@protoc_insertion_point(copy_constructor:PB.UserRegisterData)
}

void UserRegisterData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserRegisterData_ServerCommon_2eproto.base);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_ = PROTOBUF_LONGLONG(0);
}

UserRegisterData::~UserRegisterData() {
  // @@protoc_insertion_point(destructor:PB.UserRegisterData)
  SharedDtor();
}

void UserRegisterData::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRegisterData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserRegisterData& UserRegisterData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserRegisterData_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void UserRegisterData::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.UserRegisterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserRegisterData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserRegisterData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.UserRegisterData.account");
        object = msg->mutable_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.UserRegisterData.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 phonenum = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_phonenum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string platform = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.UserRegisterData.platform");
        object = msg->mutable_platform();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string device_mac = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.UserRegisterData.device_mac");
        object = msg->mutable_device_mac();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserRegisterData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.UserRegisterData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.UserRegisterData.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.UserRegisterData.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 phonenum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &phonenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform().data(), static_cast<int>(this->platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.UserRegisterData.platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_mac = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_mac().data(), static_cast<int>(this->device_mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.UserRegisterData.device_mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.UserRegisterData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.UserRegisterData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserRegisterData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.UserRegisterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserRegisterData.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserRegisterData.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // int64 phonenum = 3;
  if (this->phonenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->phonenum(), output);
  }

  // string platform = 4;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserRegisterData.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->platform(), output);
  }

  // string device_mac = 5;
  if (this->device_mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_mac().data(), static_cast<int>(this->device_mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserRegisterData.device_mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->device_mac(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.UserRegisterData)
}

::google::protobuf::uint8* UserRegisterData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.UserRegisterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserRegisterData.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserRegisterData.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // int64 phonenum = 3;
  if (this->phonenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->phonenum(), target);
  }

  // string platform = 4;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserRegisterData.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->platform(), target);
  }

  // string device_mac = 5;
  if (this->device_mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_mac().data(), static_cast<int>(this->device_mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserRegisterData.device_mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->device_mac(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.UserRegisterData)
  return target;
}

size_t UserRegisterData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.UserRegisterData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string platform = 4;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  // string device_mac = 5;
  if (this->device_mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_mac());
  }

  // int64 phonenum = 3;
  if (this->phonenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->phonenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRegisterData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.UserRegisterData)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegisterData* source =
      ::google::protobuf::DynamicCastToGenerated<UserRegisterData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.UserRegisterData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.UserRegisterData)
    MergeFrom(*source);
  }
}

void UserRegisterData::MergeFrom(const UserRegisterData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.UserRegisterData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  if (from.device_mac().size() > 0) {

    device_mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_mac_);
  }
  if (from.phonenum() != 0) {
    set_phonenum(from.phonenum());
  }
}

void UserRegisterData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.UserRegisterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegisterData::CopyFrom(const UserRegisterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.UserRegisterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegisterData::IsInitialized() const {
  return true;
}

void UserRegisterData::Swap(UserRegisterData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRegisterData::InternalSwap(UserRegisterData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platform_.Swap(&other->platform_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_mac_.Swap(&other->device_mac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(phonenum_, other->phonenum_);
}

::google::protobuf::Metadata UserRegisterData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserRegisterBack::InitAsDefaultInstance() {
}
class UserRegisterBack::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegisterBack::kPlayerIdFieldNumber;
const int UserRegisterBack::kRegisterTimeFieldNumber;
const int UserRegisterBack::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegisterBack::UserRegisterBack()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.UserRegisterBack)
}
UserRegisterBack::UserRegisterBack(const UserRegisterBack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&register_time_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(register_time_));
  // @@protoc_insertion_point(copy_constructor:PB.UserRegisterBack)
}

void UserRegisterBack::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserRegisterBack_ServerCommon_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&register_time_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(register_time_));
}

UserRegisterBack::~UserRegisterBack() {
  // @@protoc_insertion_point(destructor:PB.UserRegisterBack)
  SharedDtor();
}

void UserRegisterBack::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRegisterBack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserRegisterBack& UserRegisterBack::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserRegisterBack_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void UserRegisterBack::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.UserRegisterBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&register_time_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(register_time_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserRegisterBack::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserRegisterBack*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 player_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_player_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 register_time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_register_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string token = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.UserRegisterBack.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserRegisterBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.UserRegisterBack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 register_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &register_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.UserRegisterBack.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.UserRegisterBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.UserRegisterBack)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserRegisterBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.UserRegisterBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 player_id = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_id(), output);
  }

  // int64 register_time = 2;
  if (this->register_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->register_time(), output);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserRegisterBack.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.UserRegisterBack)
}

::google::protobuf::uint8* UserRegisterBack::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.UserRegisterBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 player_id = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_id(), target);
  }

  // int64 register_time = 2;
  if (this->register_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->register_time(), target);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserRegisterBack.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.UserRegisterBack)
  return target;
}

size_t UserRegisterBack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.UserRegisterBack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // int64 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->player_id());
  }

  // int64 register_time = 2;
  if (this->register_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->register_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRegisterBack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.UserRegisterBack)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegisterBack* source =
      ::google::protobuf::DynamicCastToGenerated<UserRegisterBack>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.UserRegisterBack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.UserRegisterBack)
    MergeFrom(*source);
  }
}

void UserRegisterBack::MergeFrom(const UserRegisterBack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.UserRegisterBack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.register_time() != 0) {
    set_register_time(from.register_time());
  }
}

void UserRegisterBack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.UserRegisterBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegisterBack::CopyFrom(const UserRegisterBack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.UserRegisterBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegisterBack::IsInitialized() const {
  return true;
}

void UserRegisterBack::Swap(UserRegisterBack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRegisterBack::InternalSwap(UserRegisterBack* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
  swap(register_time_, other->register_time_);
}

::google::protobuf::Metadata UserRegisterBack::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserAccountData::InitAsDefaultInstance() {
}
class UserAccountData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAccountData::kUserIdFieldNumber;
const int UserAccountData::kAccountFieldNumber;
const int UserAccountData::kPasswdFieldNumber;
const int UserAccountData::kPlatformFieldNumber;
const int UserAccountData::kPhonenumFieldNumber;
const int UserAccountData::kDeviceMacFieldNumber;
const int UserAccountData::kRegisterTimeFieldNumber;
const int UserAccountData::kLastLogintimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAccountData::UserAccountData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB.UserAccountData)
}
UserAccountData::UserAccountData(const UserAccountData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passwd().size() > 0) {
    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform().size() > 0) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  device_mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_mac().size() > 0) {
    device_mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_mac_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_logintime_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(last_logintime_));
  // @@protoc_insertion_point(copy_constructor:PB.UserAccountData)
}

void UserAccountData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserAccountData_ServerCommon_2eproto.base);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_logintime_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(last_logintime_));
}

UserAccountData::~UserAccountData() {
  // @@protoc_insertion_point(destructor:PB.UserAccountData)
  SharedDtor();
}

void UserAccountData::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserAccountData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserAccountData& UserAccountData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserAccountData_ServerCommon_2eproto.base);
  return *internal_default_instance();
}


void UserAccountData::Clear() {
// @@protoc_insertion_point(message_clear_start:PB.UserAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_logintime_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(last_logintime_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserAccountData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserAccountData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_user_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.UserAccountData.account");
        object = msg->mutable_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string passwd = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.UserAccountData.passwd");
        object = msg->mutable_passwd();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string platform = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.UserAccountData.platform");
        object = msg->mutable_platform();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 phonenum = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_phonenum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string device_mac = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PB.UserAccountData.device_mac");
        object = msg->mutable_device_mac();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 register_time = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_register_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 last_logintime = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_last_logintime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserAccountData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB.UserAccountData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.UserAccountData.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passwd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), static_cast<int>(this->passwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.UserAccountData.passwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform().data(), static_cast<int>(this->platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.UserAccountData.platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 phonenum = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &phonenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_mac = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_mac().data(), static_cast<int>(this->device_mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB.UserAccountData.device_mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 register_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &register_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 last_logintime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_logintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB.UserAccountData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB.UserAccountData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserAccountData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB.UserAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserAccountData.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // string passwd = 3;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserAccountData.passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->passwd(), output);
  }

  // string platform = 4;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserAccountData.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->platform(), output);
  }

  // int64 phonenum = 5;
  if (this->phonenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->phonenum(), output);
  }

  // string device_mac = 6;
  if (this->device_mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_mac().data(), static_cast<int>(this->device_mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserAccountData.device_mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->device_mac(), output);
  }

  // int64 register_time = 7;
  if (this->register_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->register_time(), output);
  }

  // int64 last_logintime = 8;
  if (this->last_logintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->last_logintime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB.UserAccountData)
}

::google::protobuf::uint8* UserAccountData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB.UserAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserAccountData.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // string passwd = 3;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), static_cast<int>(this->passwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserAccountData.passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->passwd(), target);
  }

  // string platform = 4;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserAccountData.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->platform(), target);
  }

  // int64 phonenum = 5;
  if (this->phonenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->phonenum(), target);
  }

  // string device_mac = 6;
  if (this->device_mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_mac().data(), static_cast<int>(this->device_mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB.UserAccountData.device_mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->device_mac(), target);
  }

  // int64 register_time = 7;
  if (this->register_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->register_time(), target);
  }

  // int64 last_logintime = 8;
  if (this->last_logintime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->last_logintime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB.UserAccountData)
  return target;
}

size_t UserAccountData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB.UserAccountData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string passwd = 3;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  // string platform = 4;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  // string device_mac = 6;
  if (this->device_mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_mac());
  }

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  // int64 phonenum = 5;
  if (this->phonenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->phonenum());
  }

  // int64 register_time = 7;
  if (this->register_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->register_time());
  }

  // int64 last_logintime = 8;
  if (this->last_logintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->last_logintime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserAccountData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB.UserAccountData)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAccountData* source =
      ::google::protobuf::DynamicCastToGenerated<UserAccountData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB.UserAccountData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB.UserAccountData)
    MergeFrom(*source);
  }
}

void UserAccountData::MergeFrom(const UserAccountData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB.UserAccountData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  if (from.device_mac().size() > 0) {

    device_mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_mac_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.phonenum() != 0) {
    set_phonenum(from.phonenum());
  }
  if (from.register_time() != 0) {
    set_register_time(from.register_time());
  }
  if (from.last_logintime() != 0) {
    set_last_logintime(from.last_logintime());
  }
}

void UserAccountData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB.UserAccountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAccountData::CopyFrom(const UserAccountData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB.UserAccountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAccountData::IsInitialized() const {
  return true;
}

void UserAccountData::Swap(UserAccountData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserAccountData::InternalSwap(UserAccountData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  passwd_.Swap(&other->passwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platform_.Swap(&other->platform_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_mac_.Swap(&other->device_mac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  swap(phonenum_, other->phonenum_);
  swap(register_time_, other->register_time_);
  swap(last_logintime_, other->last_logintime_);
}

::google::protobuf::Metadata UserAccountData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ServerCommon_2eproto);
  return ::file_level_metadata_ServerCommon_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace PB
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::PB::LogicServerData* Arena::CreateMaybeMessage< ::PB::LogicServerData >(Arena* arena) {
  return Arena::CreateInternal< ::PB::LogicServerData >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::LogicServerListData* Arena::CreateMaybeMessage< ::PB::LogicServerListData >(Arena* arena) {
  return Arena::CreateInternal< ::PB::LogicServerListData >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::ServerRegisterBack* Arena::CreateMaybeMessage< ::PB::ServerRegisterBack >(Arena* arena) {
  return Arena::CreateInternal< ::PB::ServerRegisterBack >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::AssestCompareList_AssestCompareInfo* Arena::CreateMaybeMessage< ::PB::AssestCompareList_AssestCompareInfo >(Arena* arena) {
  return Arena::CreateInternal< ::PB::AssestCompareList_AssestCompareInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::AssestCompareList* Arena::CreateMaybeMessage< ::PB::AssestCompareList >(Arena* arena) {
  return Arena::CreateInternal< ::PB::AssestCompareList >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::TransferAssestInfo* Arena::CreateMaybeMessage< ::PB::TransferAssestInfo >(Arena* arena) {
  return Arena::CreateInternal< ::PB::TransferAssestInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::ServerRunInfo* Arena::CreateMaybeMessage< ::PB::ServerRunInfo >(Arena* arena) {
  return Arena::CreateInternal< ::PB::ServerRunInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::ServiceData* Arena::CreateMaybeMessage< ::PB::ServiceData >(Arena* arena) {
  return Arena::CreateInternal< ::PB::ServiceData >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::ServiceDataList* Arena::CreateMaybeMessage< ::PB::ServiceDataList >(Arena* arena) {
  return Arena::CreateInternal< ::PB::ServiceDataList >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::UserRegisterData* Arena::CreateMaybeMessage< ::PB::UserRegisterData >(Arena* arena) {
  return Arena::CreateInternal< ::PB::UserRegisterData >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::UserRegisterBack* Arena::CreateMaybeMessage< ::PB::UserRegisterBack >(Arena* arena) {
  return Arena::CreateInternal< ::PB::UserRegisterBack >(arena);
}
template<> PROTOBUF_NOINLINE ::PB::UserAccountData* Arena::CreateMaybeMessage< ::PB::UserAccountData >(Arena* arena) {
  return Arena::CreateInternal< ::PB::UserAccountData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
