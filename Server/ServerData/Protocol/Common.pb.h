// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common.proto

#ifndef PROTOBUF_INCLUDED_Common_2eproto
#define PROTOBUF_INCLUDED_Common_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Common_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_Common_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Common_2eproto();
namespace PB {
class DoubleData;
class DoubleDataDefaultTypeInternal;
extern DoubleDataDefaultTypeInternal _DoubleData_default_instance_;
class Int32Array;
class Int32ArrayDefaultTypeInternal;
extern Int32ArrayDefaultTypeInternal _Int32Array_default_instance_;
class Int32Data;
class Int32DataDefaultTypeInternal;
extern Int32DataDefaultTypeInternal _Int32Data_default_instance_;
class Int64Array;
class Int64ArrayDefaultTypeInternal;
extern Int64ArrayDefaultTypeInternal _Int64Array_default_instance_;
class Int64Data;
class Int64DataDefaultTypeInternal;
extern Int64DataDefaultTypeInternal _Int64Data_default_instance_;
class NetWorkPacket;
class NetWorkPacketDefaultTypeInternal;
extern NetWorkPacketDefaultTypeInternal _NetWorkPacket_default_instance_;
class StringArray;
class StringArrayDefaultTypeInternal;
extern StringArrayDefaultTypeInternal _StringArray_default_instance_;
class StringData;
class StringDataDefaultTypeInternal;
extern StringDataDefaultTypeInternal _StringData_default_instance_;
class StringMap;
class StringMapDefaultTypeInternal;
extern StringMapDefaultTypeInternal _StringMap_default_instance_;
class StringMap_DataEntry_DoNotUse;
class StringMap_DataEntry_DoNotUseDefaultTypeInternal;
extern StringMap_DataEntry_DoNotUseDefaultTypeInternal _StringMap_DataEntry_DoNotUse_default_instance_;
class floatData;
class floatDataDefaultTypeInternal;
extern floatDataDefaultTypeInternal _floatData_default_instance_;
}  // namespace PB
namespace google {
namespace protobuf {
template<> ::PB::DoubleData* Arena::CreateMaybeMessage<::PB::DoubleData>(Arena*);
template<> ::PB::Int32Array* Arena::CreateMaybeMessage<::PB::Int32Array>(Arena*);
template<> ::PB::Int32Data* Arena::CreateMaybeMessage<::PB::Int32Data>(Arena*);
template<> ::PB::Int64Array* Arena::CreateMaybeMessage<::PB::Int64Array>(Arena*);
template<> ::PB::Int64Data* Arena::CreateMaybeMessage<::PB::Int64Data>(Arena*);
template<> ::PB::NetWorkPacket* Arena::CreateMaybeMessage<::PB::NetWorkPacket>(Arena*);
template<> ::PB::StringArray* Arena::CreateMaybeMessage<::PB::StringArray>(Arena*);
template<> ::PB::StringData* Arena::CreateMaybeMessage<::PB::StringData>(Arena*);
template<> ::PB::StringMap* Arena::CreateMaybeMessage<::PB::StringMap>(Arena*);
template<> ::PB::StringMap_DataEntry_DoNotUse* Arena::CreateMaybeMessage<::PB::StringMap_DataEntry_DoNotUse>(Arena*);
template<> ::PB::floatData* Arena::CreateMaybeMessage<::PB::floatData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace PB {

// ===================================================================

class NetWorkPacket :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PB.NetWorkPacket) */ {
 public:
  NetWorkPacket();
  virtual ~NetWorkPacket();

  NetWorkPacket(const NetWorkPacket& from);

  inline NetWorkPacket& operator=(const NetWorkPacket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetWorkPacket(NetWorkPacket&& from) noexcept
    : NetWorkPacket() {
    *this = ::std::move(from);
  }

  inline NetWorkPacket& operator=(NetWorkPacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NetWorkPacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetWorkPacket* internal_default_instance() {
    return reinterpret_cast<const NetWorkPacket*>(
               &_NetWorkPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(NetWorkPacket* other);
  friend void swap(NetWorkPacket& a, NetWorkPacket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetWorkPacket* New() const final {
    return CreateMaybeMessage<NetWorkPacket>(nullptr);
  }

  NetWorkPacket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NetWorkPacket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NetWorkPacket& from);
  void MergeFrom(const NetWorkPacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetWorkPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string service = 1;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  #if LANG_CXX11
  void set_service(::std::string&& value);
  #endif
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);

  // string action = 2;
  void clear_action();
  static const int kActionFieldNumber = 2;
  const ::std::string& action() const;
  void set_action(const ::std::string& value);
  #if LANG_CXX11
  void set_action(::std::string&& value);
  #endif
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  ::std::string* mutable_action();
  ::std::string* release_action();
  void set_allocated_action(::std::string* action);

  // bytes message_data = 6;
  void clear_message_data();
  static const int kMessageDataFieldNumber = 6;
  const ::std::string& message_data() const;
  void set_message_data(const ::std::string& value);
  #if LANG_CXX11
  void set_message_data(::std::string&& value);
  #endif
  void set_message_data(const char* value);
  void set_message_data(const void* value, size_t size);
  ::std::string* mutable_message_data();
  ::std::string* release_message_data();
  void set_allocated_message_data(::std::string* message_data);

  // string protoc_name = 7;
  void clear_protoc_name();
  static const int kProtocNameFieldNumber = 7;
  const ::std::string& protoc_name() const;
  void set_protoc_name(const ::std::string& value);
  #if LANG_CXX11
  void set_protoc_name(::std::string&& value);
  #endif
  void set_protoc_name(const char* value);
  void set_protoc_name(const char* value, size_t size);
  ::std::string* mutable_protoc_name();
  ::std::string* release_protoc_name();
  void set_allocated_protoc_name(::std::string* protoc_name);

  // uint64 operator_id = 4;
  void clear_operator_id();
  static const int kOperatorIdFieldNumber = 4;
  ::google::protobuf::uint64 operator_id() const;
  void set_operator_id(::google::protobuf::uint64 value);

  // uint64 callback_id = 5;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 5;
  ::google::protobuf::uint64 callback_id() const;
  void set_callback_id(::google::protobuf::uint64 value);

  // int32 error_code = 3;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 3;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PB.NetWorkPacket)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr action_;
  ::google::protobuf::internal::ArenaStringPtr message_data_;
  ::google::protobuf::internal::ArenaStringPtr protoc_name_;
  ::google::protobuf::uint64 operator_id_;
  ::google::protobuf::uint64 callback_id_;
  ::google::protobuf::int32 error_code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Common_2eproto;
};
// -------------------------------------------------------------------

class StringArray :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PB.StringArray) */ {
 public:
  StringArray();
  virtual ~StringArray();

  StringArray(const StringArray& from);

  inline StringArray& operator=(const StringArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringArray(StringArray&& from) noexcept
    : StringArray() {
    *this = ::std::move(from);
  }

  inline StringArray& operator=(StringArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StringArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringArray* internal_default_instance() {
    return reinterpret_cast<const StringArray*>(
               &_StringArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(StringArray* other);
  friend void swap(StringArray& a, StringArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringArray* New() const final {
    return CreateMaybeMessage<StringArray>(nullptr);
  }

  StringArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringArray& from);
  void MergeFrom(const StringArray& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string data_array = 1;
  int data_array_size() const;
  void clear_data_array();
  static const int kDataArrayFieldNumber = 1;
  const ::std::string& data_array(int index) const;
  ::std::string* mutable_data_array(int index);
  void set_data_array(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_data_array(int index, ::std::string&& value);
  #endif
  void set_data_array(int index, const char* value);
  void set_data_array(int index, const char* value, size_t size);
  ::std::string* add_data_array();
  void add_data_array(const ::std::string& value);
  #if LANG_CXX11
  void add_data_array(::std::string&& value);
  #endif
  void add_data_array(const char* value);
  void add_data_array(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& data_array() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_data_array();

  // @@protoc_insertion_point(class_scope:PB.StringArray)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> data_array_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Common_2eproto;
};
// -------------------------------------------------------------------

class Int32Array :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PB.Int32Array) */ {
 public:
  Int32Array();
  virtual ~Int32Array();

  Int32Array(const Int32Array& from);

  inline Int32Array& operator=(const Int32Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int32Array(Int32Array&& from) noexcept
    : Int32Array() {
    *this = ::std::move(from);
  }

  inline Int32Array& operator=(Int32Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Int32Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int32Array* internal_default_instance() {
    return reinterpret_cast<const Int32Array*>(
               &_Int32Array_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Int32Array* other);
  friend void swap(Int32Array& a, Int32Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int32Array* New() const final {
    return CreateMaybeMessage<Int32Array>(nullptr);
  }

  Int32Array* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int32Array>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int32Array& from);
  void MergeFrom(const Int32Array& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int32Array* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 data_array = 1;
  int data_array_size() const;
  void clear_data_array();
  static const int kDataArrayFieldNumber = 1;
  ::google::protobuf::int32 data_array(int index) const;
  void set_data_array(int index, ::google::protobuf::int32 value);
  void add_data_array(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data_array() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data_array();

  // @@protoc_insertion_point(class_scope:PB.Int32Array)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_array_;
  mutable std::atomic<int> _data_array_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Common_2eproto;
};
// -------------------------------------------------------------------

class Int64Array :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PB.Int64Array) */ {
 public:
  Int64Array();
  virtual ~Int64Array();

  Int64Array(const Int64Array& from);

  inline Int64Array& operator=(const Int64Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64Array(Int64Array&& from) noexcept
    : Int64Array() {
    *this = ::std::move(from);
  }

  inline Int64Array& operator=(Int64Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Int64Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64Array* internal_default_instance() {
    return reinterpret_cast<const Int64Array*>(
               &_Int64Array_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Int64Array* other);
  friend void swap(Int64Array& a, Int64Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64Array* New() const final {
    return CreateMaybeMessage<Int64Array>(nullptr);
  }

  Int64Array* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64Array>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64Array& from);
  void MergeFrom(const Int64Array& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64Array* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 data_array = 1;
  int data_array_size() const;
  void clear_data_array();
  static const int kDataArrayFieldNumber = 1;
  ::google::protobuf::int64 data_array(int index) const;
  void set_data_array(int index, ::google::protobuf::int64 value);
  void add_data_array(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      data_array() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_data_array();

  // @@protoc_insertion_point(class_scope:PB.Int64Array)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > data_array_;
  mutable std::atomic<int> _data_array_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Common_2eproto;
};
// -------------------------------------------------------------------

class StringData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PB.StringData) */ {
 public:
  StringData();
  virtual ~StringData();

  StringData(const StringData& from);

  inline StringData& operator=(const StringData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringData(StringData&& from) noexcept
    : StringData() {
    *this = ::std::move(from);
  }

  inline StringData& operator=(StringData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StringData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringData* internal_default_instance() {
    return reinterpret_cast<const StringData*>(
               &_StringData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(StringData* other);
  friend void swap(StringData& a, StringData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringData* New() const final {
    return CreateMaybeMessage<StringData>(nullptr);
  }

  StringData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringData& from);
  void MergeFrom(const StringData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:PB.StringData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Common_2eproto;
};
// -------------------------------------------------------------------

class Int32Data :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PB.Int32Data) */ {
 public:
  Int32Data();
  virtual ~Int32Data();

  Int32Data(const Int32Data& from);

  inline Int32Data& operator=(const Int32Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int32Data(Int32Data&& from) noexcept
    : Int32Data() {
    *this = ::std::move(from);
  }

  inline Int32Data& operator=(Int32Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Int32Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int32Data* internal_default_instance() {
    return reinterpret_cast<const Int32Data*>(
               &_Int32Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Int32Data* other);
  friend void swap(Int32Data& a, Int32Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int32Data* New() const final {
    return CreateMaybeMessage<Int32Data>(nullptr);
  }

  Int32Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int32Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int32Data& from);
  void MergeFrom(const Int32Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int32Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PB.Int32Data)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Common_2eproto;
};
// -------------------------------------------------------------------

class Int64Data :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PB.Int64Data) */ {
 public:
  Int64Data();
  virtual ~Int64Data();

  Int64Data(const Int64Data& from);

  inline Int64Data& operator=(const Int64Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64Data(Int64Data&& from) noexcept
    : Int64Data() {
    *this = ::std::move(from);
  }

  inline Int64Data& operator=(Int64Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Int64Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64Data* internal_default_instance() {
    return reinterpret_cast<const Int64Data*>(
               &_Int64Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Int64Data* other);
  friend void swap(Int64Data& a, Int64Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64Data* New() const final {
    return CreateMaybeMessage<Int64Data>(nullptr);
  }

  Int64Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Int64Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Int64Data& from);
  void MergeFrom(const Int64Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Int64Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int64 data() const;
  void set_data(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PB.Int64Data)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Common_2eproto;
};
// -------------------------------------------------------------------

class floatData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PB.floatData) */ {
 public:
  floatData();
  virtual ~floatData();

  floatData(const floatData& from);

  inline floatData& operator=(const floatData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  floatData(floatData&& from) noexcept
    : floatData() {
    *this = ::std::move(from);
  }

  inline floatData& operator=(floatData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const floatData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const floatData* internal_default_instance() {
    return reinterpret_cast<const floatData*>(
               &_floatData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(floatData* other);
  friend void swap(floatData& a, floatData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline floatData* New() const final {
    return CreateMaybeMessage<floatData>(nullptr);
  }

  floatData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<floatData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const floatData& from);
  void MergeFrom(const floatData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(floatData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  float data() const;
  void set_data(float value);

  // @@protoc_insertion_point(class_scope:PB.floatData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Common_2eproto;
};
// -------------------------------------------------------------------

class DoubleData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PB.DoubleData) */ {
 public:
  DoubleData();
  virtual ~DoubleData();

  DoubleData(const DoubleData& from);

  inline DoubleData& operator=(const DoubleData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DoubleData(DoubleData&& from) noexcept
    : DoubleData() {
    *this = ::std::move(from);
  }

  inline DoubleData& operator=(DoubleData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DoubleData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleData* internal_default_instance() {
    return reinterpret_cast<const DoubleData*>(
               &_DoubleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(DoubleData* other);
  friend void swap(DoubleData& a, DoubleData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoubleData* New() const final {
    return CreateMaybeMessage<DoubleData>(nullptr);
  }

  DoubleData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DoubleData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DoubleData& from);
  void MergeFrom(const DoubleData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:PB.DoubleData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Common_2eproto;
};
// -------------------------------------------------------------------

class StringMap_DataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<StringMap_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<StringMap_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  StringMap_DataEntry_DoNotUse();
  StringMap_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const StringMap_DataEntry_DoNotUse& other);
  static const StringMap_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const StringMap_DataEntry_DoNotUse*>(&_StringMap_DataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class StringMap :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PB.StringMap) */ {
 public:
  StringMap();
  virtual ~StringMap();

  StringMap(const StringMap& from);

  inline StringMap& operator=(const StringMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringMap(StringMap&& from) noexcept
    : StringMap() {
    *this = ::std::move(from);
  }

  inline StringMap& operator=(StringMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StringMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringMap* internal_default_instance() {
    return reinterpret_cast<const StringMap*>(
               &_StringMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(StringMap* other);
  friend void swap(StringMap& a, StringMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringMap* New() const final {
    return CreateMaybeMessage<StringMap>(nullptr);
  }

  StringMap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringMap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringMap& from);
  void MergeFrom(const StringMap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      data() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:PB.StringMap)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      StringMap_DataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Common_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NetWorkPacket

// string service = 1;
inline void NetWorkPacket::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NetWorkPacket::service() const {
  // @@protoc_insertion_point(field_get:PB.NetWorkPacket.service)
  return service_.GetNoArena();
}
inline void NetWorkPacket::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PB.NetWorkPacket.service)
}
#if LANG_CXX11
inline void NetWorkPacket::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PB.NetWorkPacket.service)
}
#endif
inline void NetWorkPacket::set_service(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PB.NetWorkPacket.service)
}
inline void NetWorkPacket::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PB.NetWorkPacket.service)
}
inline ::std::string* NetWorkPacket::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:PB.NetWorkPacket.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetWorkPacket::release_service() {
  // @@protoc_insertion_point(field_release:PB.NetWorkPacket.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetWorkPacket::set_allocated_service(::std::string* service) {
  if (service != nullptr) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:PB.NetWorkPacket.service)
}

// string action = 2;
inline void NetWorkPacket::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NetWorkPacket::action() const {
  // @@protoc_insertion_point(field_get:PB.NetWorkPacket.action)
  return action_.GetNoArena();
}
inline void NetWorkPacket::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PB.NetWorkPacket.action)
}
#if LANG_CXX11
inline void NetWorkPacket::set_action(::std::string&& value) {
  
  action_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PB.NetWorkPacket.action)
}
#endif
inline void NetWorkPacket::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PB.NetWorkPacket.action)
}
inline void NetWorkPacket::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PB.NetWorkPacket.action)
}
inline ::std::string* NetWorkPacket::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:PB.NetWorkPacket.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetWorkPacket::release_action() {
  // @@protoc_insertion_point(field_release:PB.NetWorkPacket.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetWorkPacket::set_allocated_action(::std::string* action) {
  if (action != nullptr) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:PB.NetWorkPacket.action)
}

// int32 error_code = 3;
inline void NetWorkPacket::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 NetWorkPacket::error_code() const {
  // @@protoc_insertion_point(field_get:PB.NetWorkPacket.error_code)
  return error_code_;
}
inline void NetWorkPacket::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:PB.NetWorkPacket.error_code)
}

// uint64 operator_id = 4;
inline void NetWorkPacket::clear_operator_id() {
  operator_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 NetWorkPacket::operator_id() const {
  // @@protoc_insertion_point(field_get:PB.NetWorkPacket.operator_id)
  return operator_id_;
}
inline void NetWorkPacket::set_operator_id(::google::protobuf::uint64 value) {
  
  operator_id_ = value;
  // @@protoc_insertion_point(field_set:PB.NetWorkPacket.operator_id)
}

// uint64 callback_id = 5;
inline void NetWorkPacket::clear_callback_id() {
  callback_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 NetWorkPacket::callback_id() const {
  // @@protoc_insertion_point(field_get:PB.NetWorkPacket.callback_id)
  return callback_id_;
}
inline void NetWorkPacket::set_callback_id(::google::protobuf::uint64 value) {
  
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:PB.NetWorkPacket.callback_id)
}

// bytes message_data = 6;
inline void NetWorkPacket::clear_message_data() {
  message_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NetWorkPacket::message_data() const {
  // @@protoc_insertion_point(field_get:PB.NetWorkPacket.message_data)
  return message_data_.GetNoArena();
}
inline void NetWorkPacket::set_message_data(const ::std::string& value) {
  
  message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PB.NetWorkPacket.message_data)
}
#if LANG_CXX11
inline void NetWorkPacket::set_message_data(::std::string&& value) {
  
  message_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PB.NetWorkPacket.message_data)
}
#endif
inline void NetWorkPacket::set_message_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PB.NetWorkPacket.message_data)
}
inline void NetWorkPacket::set_message_data(const void* value, size_t size) {
  
  message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PB.NetWorkPacket.message_data)
}
inline ::std::string* NetWorkPacket::mutable_message_data() {
  
  // @@protoc_insertion_point(field_mutable:PB.NetWorkPacket.message_data)
  return message_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetWorkPacket::release_message_data() {
  // @@protoc_insertion_point(field_release:PB.NetWorkPacket.message_data)
  
  return message_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetWorkPacket::set_allocated_message_data(::std::string* message_data) {
  if (message_data != nullptr) {
    
  } else {
    
  }
  message_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_data);
  // @@protoc_insertion_point(field_set_allocated:PB.NetWorkPacket.message_data)
}

// string protoc_name = 7;
inline void NetWorkPacket::clear_protoc_name() {
  protoc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NetWorkPacket::protoc_name() const {
  // @@protoc_insertion_point(field_get:PB.NetWorkPacket.protoc_name)
  return protoc_name_.GetNoArena();
}
inline void NetWorkPacket::set_protoc_name(const ::std::string& value) {
  
  protoc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PB.NetWorkPacket.protoc_name)
}
#if LANG_CXX11
inline void NetWorkPacket::set_protoc_name(::std::string&& value) {
  
  protoc_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PB.NetWorkPacket.protoc_name)
}
#endif
inline void NetWorkPacket::set_protoc_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  protoc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PB.NetWorkPacket.protoc_name)
}
inline void NetWorkPacket::set_protoc_name(const char* value, size_t size) {
  
  protoc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PB.NetWorkPacket.protoc_name)
}
inline ::std::string* NetWorkPacket::mutable_protoc_name() {
  
  // @@protoc_insertion_point(field_mutable:PB.NetWorkPacket.protoc_name)
  return protoc_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetWorkPacket::release_protoc_name() {
  // @@protoc_insertion_point(field_release:PB.NetWorkPacket.protoc_name)
  
  return protoc_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetWorkPacket::set_allocated_protoc_name(::std::string* protoc_name) {
  if (protoc_name != nullptr) {
    
  } else {
    
  }
  protoc_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protoc_name);
  // @@protoc_insertion_point(field_set_allocated:PB.NetWorkPacket.protoc_name)
}

// -------------------------------------------------------------------

// StringArray

// repeated string data_array = 1;
inline int StringArray::data_array_size() const {
  return data_array_.size();
}
inline void StringArray::clear_data_array() {
  data_array_.Clear();
}
inline const ::std::string& StringArray::data_array(int index) const {
  // @@protoc_insertion_point(field_get:PB.StringArray.data_array)
  return data_array_.Get(index);
}
inline ::std::string* StringArray::mutable_data_array(int index) {
  // @@protoc_insertion_point(field_mutable:PB.StringArray.data_array)
  return data_array_.Mutable(index);
}
inline void StringArray::set_data_array(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PB.StringArray.data_array)
  data_array_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StringArray::set_data_array(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:PB.StringArray.data_array)
  data_array_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StringArray::set_data_array(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  data_array_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PB.StringArray.data_array)
}
inline void StringArray::set_data_array(int index, const char* value, size_t size) {
  data_array_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PB.StringArray.data_array)
}
inline ::std::string* StringArray::add_data_array() {
  // @@protoc_insertion_point(field_add_mutable:PB.StringArray.data_array)
  return data_array_.Add();
}
inline void StringArray::add_data_array(const ::std::string& value) {
  data_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PB.StringArray.data_array)
}
#if LANG_CXX11
inline void StringArray::add_data_array(::std::string&& value) {
  data_array_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:PB.StringArray.data_array)
}
#endif
inline void StringArray::add_data_array(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  data_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PB.StringArray.data_array)
}
inline void StringArray::add_data_array(const char* value, size_t size) {
  data_array_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PB.StringArray.data_array)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
StringArray::data_array() const {
  // @@protoc_insertion_point(field_list:PB.StringArray.data_array)
  return data_array_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
StringArray::mutable_data_array() {
  // @@protoc_insertion_point(field_mutable_list:PB.StringArray.data_array)
  return &data_array_;
}

// -------------------------------------------------------------------

// Int32Array

// repeated int32 data_array = 1;
inline int Int32Array::data_array_size() const {
  return data_array_.size();
}
inline void Int32Array::clear_data_array() {
  data_array_.Clear();
}
inline ::google::protobuf::int32 Int32Array::data_array(int index) const {
  // @@protoc_insertion_point(field_get:PB.Int32Array.data_array)
  return data_array_.Get(index);
}
inline void Int32Array::set_data_array(int index, ::google::protobuf::int32 value) {
  data_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB.Int32Array.data_array)
}
inline void Int32Array::add_data_array(::google::protobuf::int32 value) {
  data_array_.Add(value);
  // @@protoc_insertion_point(field_add:PB.Int32Array.data_array)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Int32Array::data_array() const {
  // @@protoc_insertion_point(field_list:PB.Int32Array.data_array)
  return data_array_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Int32Array::mutable_data_array() {
  // @@protoc_insertion_point(field_mutable_list:PB.Int32Array.data_array)
  return &data_array_;
}

// -------------------------------------------------------------------

// Int64Array

// repeated int64 data_array = 1;
inline int Int64Array::data_array_size() const {
  return data_array_.size();
}
inline void Int64Array::clear_data_array() {
  data_array_.Clear();
}
inline ::google::protobuf::int64 Int64Array::data_array(int index) const {
  // @@protoc_insertion_point(field_get:PB.Int64Array.data_array)
  return data_array_.Get(index);
}
inline void Int64Array::set_data_array(int index, ::google::protobuf::int64 value) {
  data_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB.Int64Array.data_array)
}
inline void Int64Array::add_data_array(::google::protobuf::int64 value) {
  data_array_.Add(value);
  // @@protoc_insertion_point(field_add:PB.Int64Array.data_array)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Int64Array::data_array() const {
  // @@protoc_insertion_point(field_list:PB.Int64Array.data_array)
  return data_array_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Int64Array::mutable_data_array() {
  // @@protoc_insertion_point(field_mutable_list:PB.Int64Array.data_array)
  return &data_array_;
}

// -------------------------------------------------------------------

// StringData

// string data = 1;
inline void StringData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringData::data() const {
  // @@protoc_insertion_point(field_get:PB.StringData.data)
  return data_.GetNoArena();
}
inline void StringData::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PB.StringData.data)
}
#if LANG_CXX11
inline void StringData::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PB.StringData.data)
}
#endif
inline void StringData::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PB.StringData.data)
}
inline void StringData::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PB.StringData.data)
}
inline ::std::string* StringData::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:PB.StringData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringData::release_data() {
  // @@protoc_insertion_point(field_release:PB.StringData.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringData::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:PB.StringData.data)
}

// -------------------------------------------------------------------

// Int32Data

// int32 data = 1;
inline void Int32Data::clear_data() {
  data_ = 0;
}
inline ::google::protobuf::int32 Int32Data::data() const {
  // @@protoc_insertion_point(field_get:PB.Int32Data.data)
  return data_;
}
inline void Int32Data::set_data(::google::protobuf::int32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:PB.Int32Data.data)
}

// -------------------------------------------------------------------

// Int64Data

// int64 data = 1;
inline void Int64Data::clear_data() {
  data_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Int64Data::data() const {
  // @@protoc_insertion_point(field_get:PB.Int64Data.data)
  return data_;
}
inline void Int64Data::set_data(::google::protobuf::int64 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:PB.Int64Data.data)
}

// -------------------------------------------------------------------

// floatData

// float data = 1;
inline void floatData::clear_data() {
  data_ = 0;
}
inline float floatData::data() const {
  // @@protoc_insertion_point(field_get:PB.floatData.data)
  return data_;
}
inline void floatData::set_data(float value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:PB.floatData.data)
}

// -------------------------------------------------------------------

// DoubleData

// double data = 1;
inline void DoubleData::clear_data() {
  data_ = 0;
}
inline double DoubleData::data() const {
  // @@protoc_insertion_point(field_get:PB.DoubleData.data)
  return data_;
}
inline void DoubleData::set_data(double value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:PB.DoubleData.data)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StringMap

// map<string, string> data = 1;
inline int StringMap::data_size() const {
  return data_.size();
}
inline void StringMap::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
StringMap::data() const {
  // @@protoc_insertion_point(field_map:PB.StringMap.data)
  return data_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
StringMap::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:PB.StringMap.data)
  return data_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace PB

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_Common_2eproto
